DONE
Fast bulk loading.
    Pending Hyperdex speedup.
Shards
    reverse edges
        traverse edge to node which doesn't exist - require that all in-edges are deleted
    Kronos result caching
Node/edge properties.
Migration experiments.
Permanent deletion.
Serializability test with multithreaded client.

TODO
Fault tolerant (chain replicated) coordinator and shards.
Kronos events clean up
Clean up, tackle TODO/XXX.
        migrate_step 2 & 3 - rename, optimize (batch?)
Analytics API - global requests
    Find out why triangle counting is slow.


GREG TODO BEFORE A RELEASE

clean up code in general
allow node programs to not use cache parameters (to clean up interface)

get rid of unnecessary copies (possibly getting rid of all copy constructors for things)
get rid of global_req stuff

make prog_state less global?
make node prog cache dynamic cast away from cache value base internally (dont return to user as cache_value_base type)
make cache invalidation work with permanent edge deletion

allow clients to dynamically load node_program code
    dynamically generate python bindings?

Write-up 'how to make a node program'

Indexing? (later)


BUGS
line_properties.py speeds up with {1,2} timestampers and 2 shards if nop/vclk update couts are turned on.
-

WISHLIST
maybe use a try-lock when aquiring many nodes in a row (for node progs, cache context, etc) so forward progress can continue on other nodes in list
