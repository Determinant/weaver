DONE
Fast bulk loading.
    Pending Hyperdex speedup.
Shards
    reverse edges
        traverse edge to node which doesn't exist - require that all in-edges are deleted
    Kronos result caching
Node/edge properties.
Migration experiments.
Serializability test with multithreaded client.

TODO
Fault tolerant coordinator and shards.
    Fix nops for crashed shard.
    tx_queue in node has to be replicated to HyperDex.  Store as simple string.  Needed so that order of transactions at each node maintained after failure.
        Popping from tx_queue replicated only after the update has been replicated.  When shard fails in the middle of a tx, it will be resent by VT: need a function that 'checks' tx
        and only reexecutes the portion that has not been already executed---need a specialized check for each type of tx.
Permanent deletion.
    Node/edge properties
    Kronos events clean up
    Testing
Clean up, tackle TODO/XXX.
        migrate_step 2 & 3 - rename, optimize (batch?)
Analytics API - global requests
    Find out why triangle counting is slow.


GREG TODO BEFORE A RELEASE
node.has_property() needed

clean up code in general
allow node programs to not use cache parameters (to clean up interface)

get rid of unnecessary copies (possibly getting rid of all copy constructors for things)
get rid of global_req stuff

make prog_state less global?
make cache invalidation work with permanent edge deletion

allow clients to dynamically load node_program code
    dynamically generate python bindings?

Write-up 'how to make a node program'

Indexing? (later)


BUGS
line_properties.py speeds up with {1,2} timestampers and 2 shards if nop/vclk update couts are turned on.
-

WISHLIST
maybe use a try-lock when aquiring many nodes in a row (for node progs, cache context, etc) so forward progress can continue on other nodes in list
